services:
  aztebot-db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 6oFqJERp8X0V9RGN0lfhu80lqAx940
      MYSQL_USER: discordbot1
      MYSQL_DATABASE: aztebotBotDb
      MYSQL_PASSWORD: b21fCTAkaxI1a20utLhkYsMIB1QING
    ports:
      - "3306:3306"

  aztemarket-db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 6oFqJERp8X0V9RGN0lfhu80lqAx940
      MYSQL_USER: discordbot2
      MYSQL_DATABASE: azteMarketDb
      MYSQL_PASSWORD: b21fCTAkaxI1a20utLhkYsMIB1QING
    ports:
      - "3307:3306"
  
  integration-test-bot-service:
    container_name: SUT-bot-service
    depends_on:
      - aztebot-db
      - aztemarket-db
    env_file:
      ./.env
    build:
      context: .
      dockerfile: ./tests/Dockerfile
    volumes:
    # Mount testing dependencies (app, test code, DB configs, migrations, etc.)
      - "./tests:/app/tests"
      - "./local.dbconfig.yml:/app/local.dbconfig.yml"
      - "./Infrastructure/cloud-sql/migrations/history:/app/Infrastructure/cloud-sql/migrations/history"
    # Install dependencies, apply migrations on the CI database, and then run the tests while the DB is up
    entrypoint: [ "bash", "-c", "go install github.com/rubenv/sql-migrate/...@latest && sql-migrate up -config=local.dbconfig.yml -env='test-aztebot' && go test ./..."]      

networks:
  default:
    name: dev_network
    driver: bridge
    external: true