# This workflow is ran only on pushes to main. It builds the project artifact and deploys it to Google Cloud Compute Engine.
# It also generates releases and tags the commits.

name: deploy

on:
  push:
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/prod.yml'
      - 'docs/**'
      - 'README.md'
      - '.gitignore'
      - '.gitmodules'
    branches: [ 'main' ]

  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCE_PROJECT }}
  DOCKER_ARTIFACT_REPOSITORY: ${{ secrets.GCE_PROJECT_DOCKER_ARTIFACT_REGISTRY }} # TODO: Try and make this follow the instance zone declared in the infrastructure repo ?
  GKE_ZONE: europe-west2-c # TODO: Try and make this follow the instance zone declared in the infrastructure repo ?
  GKE_REGION: europe-west2 # TODO: Try and make this follow the instance zone declared in the infrastructure repo ?
  IMAGE: aztebot-service
  CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}

jobs:

  build:
    runs-on: ubuntu-latest

    permissions:
     contents: 'read'
     id-token: 'write'

    steps:
      - uses: actions/checkout@v4

      - name: Install kubectl
        run: sudo apt-get install -y kubectl

      - name: Set outputs
        id: vars
        run: echo "GITHUB_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: 'access_token'
          create_credentials_file: true
          workload_identity_provider: ${{ secrets.GCP_GITHUB_WIP }}
          service_account: ${{ secrets.GCP_GITHUB_SERVICE_ACCOUNT }}
          access_token_lifetime: '60s'
      
      - uses: 'docker/login-action@v1'
        name: 'Docker login'
        with:
          registry: '${{ env.GKE_REGION }}-docker.pkg.dev'
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'

      - name: 'Docker build'
        run: |
          docker build --tag "${{ env.GKE_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_ARTIFACT_REPOSITORY }}/${{ env.IMAGE }}:${{ steps.vars.outputs.GITHUB_SHA }}" -f cmd/bot-service/Dockerfile .

      - name: 'Docker push'
        run: |
          docker push "${{ env.GKE_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_ARTIFACT_REPOSITORY }}/${{ env.IMAGE }}:${{ steps.vars.outputs.GITHUB_SHA }}"
      
      - name: Connect to GKE
        uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: ${{ env.CLUSTER_NAME }}
          location: ${{ env.GKE_ZONE }}
      
      - name: Create Kubernetes Deployment for Docker Image
        run: |
          kubectl create deployment ${{ env.IMAGE }} --image=${{ env.GKE_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_ARTIFACT_REPOSITORY }}/${{ env.IMAGE }}:${{ steps.vars.outputs.GITHUB_SHA }}

      - name: Set baseline Kubernetes Deployment replicas
        run: |
          kubectl scale deployment ${{ env.IMAGE }} --replicas=1

      - name: Show created Pods
        run: |
          kubectl get pods